[{"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\index.js":"1","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\App.js":"2","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reportWebVitals.js":"3","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\index.js":"4","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\fileReducer.js":"5","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\userReducer.js":"6","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Navbar\\Navbar.jsx":"7","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Registration\\Registration.jsx":"8","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\UI\\Input\\Input.jsx":"9","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\actions\\users.js":"10","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Login\\Login.jsx":"11","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Disk.jsx":"12","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\actions\\file.js":"13","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\FileList.jsx":"14","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\File.jsx":"15","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Popup.jsx":"16","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\uploadReducer.js":"17","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Uploader\\Uploader.jsx":"18","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Uploader\\UploadFile.jsx":"19","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\config.js":"20","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\utils\\sizeFormat.js":"21","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\appReducer.js":"22","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\UI\\Loader\\Loader.jsx":"23","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Profile\\Profile.jsx":"24"},{"size":622,"mtime":1609076105264,"results":"25","hashOfConfig":"26"},{"size":1390,"mtime":1609280135297,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1606305736769,"results":"28","hashOfConfig":"26"},{"size":597,"mtime":1609267213117,"results":"29","hashOfConfig":"26"},{"size":2179,"mtime":1609270918143,"results":"30","hashOfConfig":"26"},{"size":782,"mtime":1609084874204,"results":"31","hashOfConfig":"26"},{"size":2962,"mtime":1609281283276,"results":"32","hashOfConfig":"26"},{"size":1876,"mtime":1609082177143,"results":"33","hashOfConfig":"26"},{"size":542,"mtime":1609081095552,"results":"34","hashOfConfig":"26"},{"size":2405,"mtime":1609280043581,"results":"35","hashOfConfig":"26"},{"size":1926,"mtime":1609085523492,"results":"36","hashOfConfig":"26"},{"size":4502,"mtime":1609271481152,"results":"37","hashOfConfig":"26"},{"size":4555,"mtime":1609268922362,"results":"38","hashOfConfig":"26"},{"size":1865,"mtime":1609271365956,"results":"39","hashOfConfig":"26"},{"size":3198,"mtime":1609272056844,"results":"40","hashOfConfig":"26"},{"size":2023,"mtime":1609184491491,"results":"41","hashOfConfig":"26"},{"size":1490,"mtime":1609253325537,"results":"42","hashOfConfig":"26"},{"size":906,"mtime":1609255225501,"results":"43","hashOfConfig":"26"},{"size":905,"mtime":1609255229504,"results":"44","hashOfConfig":"26"},{"size":47,"mtime":1609254075599,"results":"45","hashOfConfig":"26"},{"size":308,"mtime":1609257609425,"results":"46","hashOfConfig":"26"},{"size":502,"mtime":1609267894599,"results":"47","hashOfConfig":"26"},{"size":234,"mtime":1609267988614,"results":"48","hashOfConfig":"26"},{"size":625,"mtime":1609280206033,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1vo964x",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\index.js",[],["104","105"],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\App.js",["106"],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reportWebVitals.js",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\index.js",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\fileReducer.js",["107"],"const SET_FILES = 'SET_FILES'\r\nconst SET_CURRENT_DIR = 'SET_CURRENT_DIR'\r\nconst ADD_FILE = 'ADD_FILE'\r\nconst SET_POPUP_DISPLAY = 'SET_POPUP_DISPLAY'\r\nconst PUSH_TO_STACK = \"PUSH_TO_STACK\"\r\nconst DELETE_FILE = \"DELETE_FILE\"\r\nconst SET_VIEW = 'SET_VIEW'\r\n\r\nconst initialState = {\r\n    files: [],\r\n    currentDir: null,\r\n    popupDisplay: 'none',\r\n    dirStack: [],\r\n    view: 'list'\r\n}\r\n\r\nexport default function fileReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_FILES:\r\n            return {\r\n                ...state,\r\n                files: action.payload\r\n            }\r\n        case SET_CURRENT_DIR:\r\n            return {\r\n                ...state,\r\n                currentDir: action.payload\r\n            }\r\n        case ADD_FILE:\r\n            return {\r\n                ...state,\r\n                files: [...state.files, action.payload]\r\n            }\r\n        case SET_POPUP_DISPLAY:\r\n            return {\r\n                ...state,\r\n                popupDisplay: action.payload\r\n            }\r\n            case PUSH_TO_STACK: \r\n                return {\r\n                    ...state, \r\n                    dirStack: [...state.dirStack, action.payload]\r\n                }\r\n            case DELETE_FILE: \r\n                return {\r\n                    ...state, \r\n                    files: [...state.files.filter(file => file._id != action.payload)]\r\n                }\r\n            case SET_VIEW: return {...state, view: action.payload}\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setFiles = (files) => ({\r\n    type: SET_FILES,\r\n    payload: files\r\n})\r\n\r\nexport const setCurrentDir = (dir) => ({\r\n    type: SET_CURRENT_DIR,\r\n    payload: dir\r\n})\r\n\r\nexport const addFile = (file) => ({\r\n    type: ADD_FILE,\r\n    payload: file\r\n})\r\n\r\nexport const setPopupDisplay = (display) => ({\r\n    type: SET_POPUP_DISPLAY,\r\n    payload: display\r\n})\r\n\r\nexport const pushToStack = (dir) => ({\r\n    type: PUSH_TO_STACK, \r\n    payload: dir\r\n})\r\nexport const deleteFileAction = (fileId) => ({\r\n    type: DELETE_FILE, \r\n    payload: fileId\r\n})\r\n\r\nexport const setFileView = (payload) => ({type: SET_VIEW, payload})","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\userReducer.js",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Navbar\\Navbar.jsx",["108","109"],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Registration\\Registration.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\UI\\Input\\Input.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\actions\\users.js",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Login\\Login.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Disk.jsx",["110"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getFiles, uploadFile } from '../../actions/file'\r\nimport FileList from './FileList'\r\n\r\nimport './Disk.scss'\r\nimport Popup from './Popup'\r\nimport { setCurrentDir, setFileView, setPopupDisplay } from '../../reducers/fileReducer'\r\nimport Uploader from './Uploader/Uploader'\r\nimport Loader from '../UI/Loader/Loader'\r\n\r\nexport default function Disk() {\r\n    const dispatch = useDispatch()\r\n    const currentDir = useSelector(state => state.files.currentDir)\r\n    const dirStack = useSelector(state => state.files.dirStack)\r\n    const loader = useSelector(state => state.app.loader)\r\n    const [dragEnter, setDragEnter] = useState(false)\r\n    const [sort, setSort] = useState('type')\r\n\r\n    useEffect(() => {\r\n        dispatch(getFiles(currentDir, sort))\r\n    }, [currentDir, sort])\r\n\r\n    function openPopup () {\r\n        dispatch(setPopupDisplay('flex'))\r\n    }\r\n\r\n    function backClickHandler() {\r\n        const backDirId = dirStack.pop()\r\n        dispatch(setCurrentDir(backDirId))\r\n    }\r\n\r\n    function fileUploadHandler(event) {\r\n        const files = [...event.target.files]\r\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\r\n    }\r\n\r\n    function dragEnterHandler(event) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        setDragEnter(true)\r\n    }\r\n\r\n    function dragLeaveHandler(event) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        setDragEnter(false)\r\n    }\r\n\r\n    function dropHandler(event) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        let files = [...event.dataTransfer.files]\r\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\r\n        setDragEnter(false)\r\n    }\r\n\r\n    if (loader) {\r\n        return <Loader />\r\n    }\r\n    \r\n\r\n    return ( !dragEnter ? \r\n        <div className=\"disk\" onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\r\n            <Popup />\r\n            <div className=\"disk__btns\">\r\n                <div className=\"left-items\">\r\n                    <button \r\n                        onClick={backClickHandler}\r\n                        className=\"btn disk__back\"\r\n                        >Назад</button>\r\n                    <button\r\n                        onClick={openPopup}\r\n                        className=\"btn disk__create\"\r\n                        >Создать папку\r\n                    </button>\r\n                    <div className=\"disk__upload\">\r\n                        <label htmlFor=\"disk__upload-input\" className=\"disk__upload-label\">\r\n                            Загрузить файл\r\n                            {/* <i className=\"material-icons\">file_upload</i>  */}\r\n                        </label>\r\n                        <input multiple={true} onChange={fileUploadHandler} type=\"file\" id=\"disk__upload-input\" className=\"disk__upload-input\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"right-items\">\r\n                        <select\r\n                            value={sort}\r\n                            onChange={(e) => setSort(e.target.value)}\r\n                            className='disk__select'\r\n                            >\r\n                            <option value=\"name\">По имени</option>\r\n                            <option value=\"type\">По типу</option>\r\n                            <option value=\"date\">По дате</option>\r\n                        </select>\r\n                        <div className=\"set__view\">\r\n                            <div className=\"disk__plate\" onClick={() => dispatch(setFileView('plate'))}>\r\n                                <i className=\"material-icons\">apps</i>\r\n                            </div>\r\n                            <div className=\"disk__list\" onClick={() => dispatch(setFileView('list'))}>\r\n                                \r\n                                <i className=\"material-icons\">list</i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </div>\r\n            <Uploader />\r\n            <FileList />\r\n        </div>\r\n        : <div className=\"drop-area\" onDrop={dropHandler} onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\r\n            Перетащите файлы сюда\r\n        </div>\r\n    )\r\n}\r\n","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\actions\\file.js",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\FileList.jsx",["111"],"import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport File from \"./File\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nexport default function FileList() {\r\n    const files = useSelector(state => state.files.files)\r\n    const fileView = useSelector(state => state.files.view)\r\n\r\n    if (files.length === 0) {\r\n        return <div className=\"loader\"><h5>Файлы не найдены</h5></div>\r\n    }\r\n\r\n    if (fileView === \"plate\") {\r\n        return (\r\n            <ul className=\"fileplate\">\r\n                {files.map(file =>\r\n                    <File key={file._id} file={file}/>\r\n                )}\r\n        </ul>\r\n        )\r\n    }\r\n    \r\n\r\n    if (fileView === 'list') {\r\n        return (\r\n            <div className='filelist'>\r\n                   \r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Type</th>\r\n                            <th>Название</th>\r\n                            <th>Дата</th>\r\n                            <th>Размер</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n    \r\n                    <tbody>\r\n           \r\n                        {files.map(file =>\r\n                            <CSSTransition\r\n                        \r\n                                key={file._id}\r\n                                timeout={500}\r\n                                classNames={'file'}\r\n                                exit={false}\r\n                            >\r\n                                <File file={file}/>\r\n                            </CSSTransition>\r\n                        )}\r\n          \r\n    \r\n                    </tbody>\r\n                </table>\r\n                \r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    \r\n}\r\n","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\File.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Popup.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\uploadReducer.js",["112","113"],"const SHOW_UPLOADER = 'SHOW_UPLOADER'\r\nconst HIDE_UPLOADER = 'HIDE_UPLOADER'\r\nconst ADD_UPLOAD_FILE = 'ADD_UPLOAD_FILE'\r\nconst REMOVE_UPLOAD_FILE = 'REMOVE_UPLOAD_FILE'\r\nconst CHANGE_UPLOAD_FILE = 'CHANGE_UPLOAD_FILE'\r\n\r\n\r\nconst defaultState = {\r\n    isVisible: false,\r\n    files: []\r\n}\r\n\r\nexport default function userReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SHOW_UPLOADER: return {...state, isVisible: true}\r\n        case HIDE_UPLOADER: return {...state, isVisible: false}\r\n        case ADD_UPLOAD_FILE:\r\n            return {...state, files: [...state.files, action.payload]}\r\n        case REMOVE_UPLOAD_FILE:\r\n            return {...state, files: [...state.files.filter(file => file.id != action.payload)]}\r\n        case CHANGE_UPLOAD_FILE:\r\n            return {\r\n                ...state,\r\n                files: [...state.files.map(file => file.id == action.payload.id\r\n                    ? {...file, progress: action.payload.progress}\r\n                    : {...file}\r\n                )]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const showUploader = () => ({type: SHOW_UPLOADER})\r\nexport const hideUploader = () => ({type: HIDE_UPLOADER})\r\nexport const addUploadFile = (file) => ({type: ADD_UPLOAD_FILE, payload: file})\r\nexport const removeUploadFile = (fileId) => ({type: REMOVE_UPLOAD_FILE, payload: fileId})\r\nexport const changeUploadFile = (payload) => ({type: CHANGE_UPLOAD_FILE, payload: payload})","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Uploader\\Uploader.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Disk\\Uploader\\UploadFile.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\config.js",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\utils\\sizeFormat.js",["114"],"export default (size) => {\r\n    if(size > 1024*1024*1024) {\r\n        return (size/(1024*1024*1024)).toFixed(1)+\"Gb\"\r\n    }\r\n    if(size > 1024*1024) {\r\n        return (size/(1024*1024)).toFixed(1)+\"Mb\"\r\n    }\r\n    if(size > 1024) {\r\n        return (size/(1024)).toFixed(1)+\"Kb\"\r\n    }\r\n    return size+\"B\"\r\n}","D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\reducers\\appReducer.js",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\UI\\Loader\\Loader.jsx",[],"D:\\my_projects\\react\\mern-cloud-storage\\client\\src\\components\\Profile\\Profile.jsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":22,"column":6,"nodeType":"121","endLine":22,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":47,"column":68,"nodeType":"125","messageId":"126","endLine":47,"endColumn":70},{"ruleId":"123","severity":1,"message":"124","line":30,"column":27,"nodeType":"125","messageId":"126","endLine":30,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":34,"column":27,"nodeType":"125","messageId":"126","endLine":34,"endColumn":29},{"ruleId":"119","severity":1,"message":"120","line":22,"column":8,"nodeType":"121","endLine":22,"endColumn":26,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":4,"column":24,"nodeType":"130","messageId":"131","endLine":4,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":20,"column":77,"nodeType":"125","messageId":"126","endLine":20,"endColumn":79},{"ruleId":"123","severity":1,"message":"132","line":24,"column":60,"nodeType":"125","messageId":"126","endLine":24,"endColumn":62},{"ruleId":"133","severity":1,"message":"134","line":1,"column":1,"nodeType":"135","endLine":12,"endColumn":2},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["138"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["139"],"no-unused-vars","'TransitionGroup' is defined but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [dispatch]",{"range":"144","text":"145"},"Update the dependencies array to be: [currentDir, dispatch, sort]",{"range":"146","text":"147"},[736,738],"[dispatch]",[871,889],"[currentDir, dispatch, sort]"]